// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend.proto

package backend

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Conversion struct {
	Data                 map[string]*Currency `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Conversion) Reset()         { *m = Conversion{} }
func (m *Conversion) String() string { return proto.CompactTextString(m) }
func (*Conversion) ProtoMessage()    {}
func (*Conversion) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{0}
}

func (m *Conversion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversion.Unmarshal(m, b)
}
func (m *Conversion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversion.Marshal(b, m, deterministic)
}
func (m *Conversion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversion.Merge(m, src)
}
func (m *Conversion) XXX_Size() int {
	return xxx_messageInfo_Conversion.Size(m)
}
func (m *Conversion) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversion.DiscardUnknown(m)
}

var xxx_messageInfo_Conversion proto.InternalMessageInfo

func (m *Conversion) GetData() map[string]*Currency {
	if m != nil {
		return m.Data
	}
	return nil
}

type Currency struct {
	Quote                map[string]*Price `protobuf:"bytes,1,rep,name=Quote,proto3" json:"Quote,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Symbol               string            `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{1}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetQuote() map[string]*Price {
	if m != nil {
		return m.Quote
	}
	return nil
}

func (m *Currency) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type Price struct {
	Price                float32  `protobuf:"fixed32,1,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{2}
}

func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (m *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(m, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

//// The response message containing the greetings
type Reply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{3}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Conversion)(nil), "backend.Conversion")
	proto.RegisterMapType((map[string]*Currency)(nil), "backend.Conversion.DataEntry")
	proto.RegisterType((*Currency)(nil), "backend.Currency")
	proto.RegisterMapType((map[string]*Price)(nil), "backend.Currency.QuoteEntry")
	proto.RegisterType((*Price)(nil), "backend.Price")
	proto.RegisterType((*Reply)(nil), "backend.Reply")
}

func init() { proto.RegisterFile("backend.proto", fileDescriptor_5ab9ba5b8d8b2ba5) }

var fileDescriptor_5ab9ba5b8d8b2ba5 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x4a, 0xf3, 0x40,
	0x10, 0xc5, 0xbf, 0x6d, 0xbf, 0xb4, 0x76, 0xaa, 0xa2, 0xeb, 0x1f, 0x4a, 0xb1, 0x58, 0x82, 0xd0,
	0x5e, 0x2d, 0x18, 0xbd, 0x10, 0x6f, 0xc4, 0xaa, 0x28, 0x5e, 0xc5, 0x15, 0x1f, 0x60, 0x93, 0x0e,
	0x12, 0x1a, 0xb3, 0x61, 0xb3, 0xa9, 0xe6, 0x19, 0x7c, 0x09, 0x1f, 0x55, 0xb2, 0xd9, 0x34, 0x8a,
	0xbd, 0x9b, 0x33, 0x73, 0x76, 0xce, 0x8f, 0x1d, 0xd8, 0x0a, 0x44, 0xb8, 0xc0, 0x64, 0xce, 0x52,
	0x25, 0xb5, 0xa4, 0x5d, 0x2b, 0xdd, 0x4f, 0x02, 0x70, 0x23, 0x93, 0x25, 0xaa, 0x2c, 0x92, 0x09,
	0x3d, 0x85, 0xff, 0xb7, 0x42, 0x8b, 0x01, 0x19, 0xb7, 0xa7, 0x7d, 0x6f, 0xc4, 0xea, 0x57, 0x8d,
	0x85, 0x95, 0xf3, 0xbb, 0x44, 0xab, 0x82, 0x1b, 0xeb, 0xf0, 0x11, 0x7a, 0xab, 0x16, 0xdd, 0x81,
	0xf6, 0x02, 0x8b, 0x01, 0x19, 0x93, 0x69, 0x8f, 0x97, 0x25, 0x9d, 0x80, 0xb3, 0x14, 0x71, 0x8e,
	0x83, 0xd6, 0x98, 0x4c, 0xfb, 0xde, 0x6e, 0xb3, 0x32, 0x57, 0x0a, 0x93, 0xb0, 0xe0, 0xd5, 0xfc,
	0xb2, 0x75, 0x41, 0xdc, 0x2f, 0x02, 0x1b, 0x75, 0x9f, 0x7a, 0xe0, 0x3c, 0xe5, 0x52, 0xa3, 0x85,
	0x39, 0xfa, 0xf3, 0x92, 0x99, 0x71, 0xc5, 0x52, 0x59, 0xe9, 0x21, 0x74, 0x9e, 0x8b, 0xb7, 0x40,
	0xc6, 0x26, 0xae, 0xc7, 0xad, 0x1a, 0x3e, 0x00, 0x34, 0xe6, 0x35, 0x94, 0x27, 0xbf, 0x29, 0xb7,
	0x57, 0x59, 0xbe, 0x8a, 0x42, 0xfc, 0x89, 0x38, 0x02, 0xc7, 0xf4, 0xe8, 0xbe, 0x2d, 0xcc, 0x9a,
	0x16, 0xaf, 0x84, 0x7b, 0x0c, 0x0e, 0xc7, 0x34, 0x2e, 0x4a, 0x92, 0x4c, 0x0b, 0x9d, 0x67, 0x36,
	0xc6, 0x2a, 0xef, 0x0a, 0xba, 0xf7, 0x0a, 0x51, 0xa3, 0xa2, 0xe7, 0xd0, 0x7f, 0x49, 0xe7, 0x42,
	0xe3, 0x75, 0x96, 0xa1, 0xa6, 0x7b, 0x6b, 0x7e, 0x7b, 0xd8, 0x90, 0x98, 0xb5, 0xee, 0xbf, 0xd9,
	0x04, 0x0e, 0x22, 0xc9, 0x5e, 0x55, 0x1a, 0xb2, 0x77, 0xa1, 0xf5, 0x47, 0x6d, 0x98, 0x6d, 0xce,
	0xaa, 0xc2, 0x2f, 0x2f, 0xec, 0x93, 0xa0, 0x63, 0x4e, 0x7d, 0xf6, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x22, 0x74, 0xe1, 0x05, 0xfb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

func errUnimplemented(methodName string) error {
	return status.Errorf(codes.Unimplemented, "method %s not implemented", methodName)
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	UpdateAsset(ctx context.Context, in *Conversion, opts ...grpc.CallOption) (*Reply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) UpdateAsset(ctx context.Context, in *Conversion, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/backend.Greeter/UpdateAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	UpdateAsset(context.Context, *Conversion) (*Reply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) UpdateAsset(ctx context.Context, req *Conversion) (*Reply, error) {
	return nil, errUnimplemented("UpdateAsset")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_UpdateAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Conversion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).UpdateAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Greeter/UpdateAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).UpdateAsset(ctx, req.(*Conversion))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAsset",
			Handler:    _Greeter_UpdateAsset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}
